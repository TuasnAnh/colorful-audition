{"version":3,"sources":["system/BgRenderSystem.js","system/ArrowButtonRenderSystem.js","system/InputHandlerGameScreenSystem.js","system/ButtonRenderSystem.js","system/BarDurationRenderSystem.js","system/HandAnimationRenderSystem.js","components/orthoCamera2.js","system/CurtainRenderSystem.js","system/CaroBgRenderSystem.js","utils/coordUtils.js","screen/EndScreen.js","screen/GameScreen.js","data.js","createWorld.js","components/xml2json.js","components/loadSCML.js","components/textureRegion.js","components/loadJsonAtlas.js","loadSpriter.js","screen/StartScreen.js","index.js"],"names":["createBackGroundRenderSystem","tableInfos","init","worldState","width","table","height","assets","auditionAtlas","findRegion","TABLE_WIDTH","TABLE_HEIGHT","tex","w","h","update","delta","boundaryY","batch","camera","setProjection","combined","begin","setColor","draw","end","createRenderArrowButtonSystem","finishTex","starEffect","SE_WIDHT","SE_HEIGHT","buttonTex","buttonRect","finishRect","scaleButton","scaleFinish","atlas","finishAtlas","upButton","downButton","leftButton","rightButton","upButtonPress","downButtonPress","leftButtonPress","rightButtonPress","finishButton","FINISH_WIDTH","FINISH_HEIGHT","BUTTON_WIDTH","BUTTON_HEIGHT","horizonalMargin","BUTTON_START_LEFT_X","BUTTON_START_LEFT_y","x","y","unpress","press","whiteTex","inputHandler","finishedPhase","hitFinishButton","Math","max","min","scale1","opacity1","scale2","opacity2","i","length","keyActivated","activateKey","key","deactivateKey","checkHitRight","type","notes","phaseIndex","currentCheckingNoteIndex","activated","zoomOutNoteIndexs","push","createInputHandleGameScreenSystem","rectTouches","coord","Vector2","canvas","pixelRatio","addEventListener","id","runIntro","setVector","getTouchedWorldCoord","rectIndex","rect","getRectContainPoint","getRectPassButtonPoint","canPassPhase","hit","hitRight","miss","hitMiss","disableNode","document","e","which","createButtonRenderSystem","downBtn","upBtn","leftBtn","rightBtn","downBtnGray","upBtnGray","leftBtnGray","rightBtnGray","active","passive","noteInfos","zoomOutNoteInfos","currentNotesPhase","currentNotesInfos","index","scale","postion","splice","note","createDurationRenderSystem","finishBar","finishMark","finishMetter","markEffect","durationZone","BAR_WIDTH","METTER_WIDTH","MARK_WIDTH","ME_WIDTH","ME_HEIGHT","cool","great","perfect","textList","textListInfos","finishBarInfos","finishMetterInfos","finishMarkInfos","mask","COOL_H","COOL_W","GREAT_H","GREAT_W","PERFECT_H","PERFECT_W","MISS_H","MISS_W","BAR_HEIGHT","BAR_START_X","MARK_HEIGHT","METTER_HEIGHT","stateTime","realTimeDurationSet","durationEachPhase","fillRect","texture","scoreType","centerTime","minTime","infos","checkScoreType","textPopUp","startY","opacity","finishMarkEffect","createHandAnimationRenderSystem","offsetX","offsetY","DRAW_WIDTH","DRAW_HEIGHT","animOffset","bam_sai","buom_bay_right","xoa_tay","buom_bay_left","choang_nhau","tinh_ban","ca_sau","spriter","resizeCanvas","cWidth","cHeight","viewportWidth","viewportHeight","mat4","create","transform","invOrtho","lookAtMatrix","position","tmp3","eye","center","up","ortho","identity","lookAt","mul","invert","setMatrix","mat","copy","setYUp","yUp","setPosition","unprojectVector2","out","input","unproject","set","resize","newWidth","newHeight","createOrthoCamera2","getAspect","setEntity","setAnim","anim","offset","getAnim","createCurtainRenderSystem","curtainInfors","curtain","CURTAIN_WIDTH","CURTAIN_HEIGHT","createCaroRenderSystem","backGroundInfos","bg","BG_WIDTH","BG_HEIGHT","checkPointInsideRect","point","verts","DEVICE_PIXEL_RATIO","minX","maxX","minY","maxY","createRenderEndScreenSystem","Game","goToStartScreen","a","createRenderStartScreenSystem","setCurrentScreen","viewport","createViewportAwareInputHandler","startEndAtlas","restartButton","quote","yourScore","percentage","RB_WIDTH","RB_HEIGHT","RB_START_X","RB_START_Y","Q_WIDHT","Q_HEIGHT","YS_WIDTH","YS_HEIGH","number0","number1","number2","number3","number4","number5","number6","number7","number8","number9","NB_HEIGHT","numberInfos","percentageInfos","numberList","sumLength","START_X","distanceTmp","caculateString","result","char","charAt","parseInt","getStringInfos","completePercentage","toString","destroy","cleanup","gl","sound","lines","split","value","map","s","trim","start","parseFloat","duration","nodes","dancingDuration","intro","shift","play","scripts","tmpArray","floor","random","NOTE_SIZE","NOTE_MARGIN","NOTE_START_Y","NOTE_RECTS","NOTE_Y","NOTE_X","j","noteI","abs","missAnim","animIndex","gameOver","buttonInfos","durationBarInfos","world","extra","systems","passiveSystems","addSystem","system","runPassive","createWorld","goToEndScreen","timeAccumulate","counter","animCounter","readyToChangePhase","loadNewPhase","undefined","xml","tab","X","toObj","o","nodeType","attributes","nodeName","nodeValue","firstChild","textChild","cdataChild","hasElementChild","n","nextSibling","match","removeWhite","escape","Array","innerXml","documentElement","alert","toJson","name","ind","json","join","arr","m","node","innerHTML","asXml","c","txt","replace","normalize","nxt","removeChild","packFileUrl","regionNames","spriter_data","fetch","then","res","text","packFileContent","parser","DOMParser","xml_text","parseFromString","json_text","xml2json","JSON","parse","spriter_json","Data","load","folder_array","forEach","folder","file_array","file","fileIndex","pose","Pose","data","rawData","TextureRegion","originX","originY","extraData","invTexWidth","invTexHeight","u","v","u2","v2","this","rotated","cols","rows","regionWidth","regionHeight","regions","rotation","scaleX","scaleY","concatAndResolveUrl","url","concat","url1","url2","url3","l","pop","loadUrl","textureOptions","textureRegions","sites","obj","meta","Object","getOwnPropertyNames","frames","framesArray","keys","image","frame","site","rotate","offset_x","spriteSourceSize","offset_y","original_w","sourceSize","original_h","region","trimmed","app","format","main_texture","size","version","loadTexture","invTextWidth","invTextHeight","listPackFileUrl","isArray","getRegions","scmlUrl","rectName","loadSCML","atlasInfos","transformMatrix","vertices","Float32Array","arr1","arr2","arr3","arr4","xy1","xy2","xy3","xy4","loadJsonAtlas","info","setArr","v1","v3","v4","v5","generateVertices","affine","color","translate","rotateZ","rad","vec3","transformMat4","domain","range","getInfos","rectObject","strike","entityKey","entity","entity_map","obj_info_map","px","object_array","find","world_space","py","pw","ph","prevX","prevY","prevW","prevH","nudged","estimate","folder_index","file_index","drawVertices","loadSpriter","startButton","NB1_WIDHT","NB1_HEIGHT","NB2_WIDHT","NB2_HEIGHT","NB3_HEIGHT","NB3_WIDHT","startCountDown","scale3","goToGameScreen","createRenderGameScreenSystem","scaleState","getElementById","window","devicePixelRatio","createViewport","getContext","getCamera","createBatch","createWhiteText","Howl","src","screen","currentScreen","loadAtlas","clearColor","clear","COLOR_BUFFER_BIT","createGameLoop"],"mappings":"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","file":"static/js/main.949dee9a.chunk.js","sourcesContent":["const createBackGroundRenderSystem = () => {\r\n  let tableInfos = {};\r\n  // let backGroundInfos = {};\r\n  return {\r\n    init(worldState, { width, height, assets }) {\r\n      let atlas = assets.auditionAtlas;\r\n      const table = atlas.findRegion(\"table\", -1);\r\n      const TABLE_WIDTH = width;\r\n      const TABLE_HEIGHT = (TABLE_WIDTH * table.height) / table.width;\r\n      tableInfos = { tex: table, w: TABLE_WIDTH, h: TABLE_HEIGHT };\r\n    },\r\n    update(delta, { boundaryY }, { batch, width, height, camera }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n\r\n      tableInfos.tex.draw(\r\n        batch,\r\n        width / 2 - tableInfos.w / 2,\r\n        boundaryY,\r\n        tableInfos.w,\r\n        tableInfos.h\r\n      );\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBackGroundRenderSystem;\r\n","// import { fillRect } from \"gdxjs\";\r\n\r\nconst createRenderArrowButtonSystem = () => {\r\n  let buttonTex = [];\r\n  let buttonRect = [];\r\n  let finishRect = {};\r\n  let finishTex;\r\n  let starEffect, SE_WIDHT, SE_HEIGHT;\r\n  let scaleButton = 1;\r\n  let scaleFinish = 0.4;\r\n  return {\r\n    init(worldState, { width, height, assets }) {\r\n      const atlas = assets.auditionAtlas;\r\n      const finishAtlas = assets.finishAtlas;\r\n      const upButton = atlas.findRegion(\"up\", -1);\r\n      const downButton = atlas.findRegion(\"down\", -1);\r\n      const leftButton = atlas.findRegion(\"left\", -1);\r\n      const rightButton = atlas.findRegion(\"right\", -1);\r\n      const upButtonPress = atlas.findRegion(\"up-press\", -1);\r\n      const downButtonPress = atlas.findRegion(\"down-press\", -1);\r\n      const leftButtonPress = atlas.findRegion(\"left-press\", -1);\r\n      const rightButtonPress = atlas.findRegion(\"right-press\", -1);\r\n      const finishButton = atlas.findRegion(\"finish_press\", -1);\r\n\r\n      starEffect = finishAtlas.findRegion(\"finish_start_effect\", -1);\r\n\r\n      SE_WIDHT = width / 8;\r\n      SE_HEIGHT = (SE_WIDHT * starEffect.height) / starEffect.width;\r\n\r\n      const FINISH_WIDTH = width / 4;\r\n      const FINISH_HEIGHT =\r\n        (FINISH_WIDTH * finishButton.height) / finishButton.width;\r\n\r\n      const BUTTON_WIDTH = width / 5;\r\n      const BUTTON_HEIGHT = (BUTTON_WIDTH * upButton.height) / upButton.width;\r\n\r\n      const horizonalMargin = BUTTON_WIDTH * 0.8;\r\n      const BUTTON_START_LEFT_X =\r\n        (width - (BUTTON_WIDTH * 2 + horizonalMargin)) / 2;\r\n      const BUTTON_START_LEFT_y = (height * 3.95) / 5;\r\n\r\n      finishTex = finishButton;\r\n      finishRect = {\r\n        x:\r\n          BUTTON_START_LEFT_X +\r\n          BUTTON_WIDTH +\r\n          horizonalMargin / 2 -\r\n          FINISH_WIDTH / 2,\r\n        y: BUTTON_START_LEFT_y + BUTTON_HEIGHT / 2 - FINISH_HEIGHT / 2,\r\n        width: FINISH_WIDTH,\r\n        height: FINISH_HEIGHT,\r\n      };\r\n\r\n      buttonTex = [\r\n        { unpress: leftButton, press: leftButtonPress },\r\n        { unpress: upButton, press: upButtonPress },\r\n        { unpress: rightButton, press: rightButtonPress },\r\n        { unpress: downButton, press: downButtonPress },\r\n      ];\r\n      buttonRect = [\r\n        {\r\n          x: BUTTON_START_LEFT_X,\r\n          y: BUTTON_START_LEFT_y,\r\n          width: BUTTON_WIDTH,\r\n          height: BUTTON_HEIGHT,\r\n        },\r\n        {\r\n          x: BUTTON_START_LEFT_X + BUTTON_WIDTH / 2 + horizonalMargin / 2,\r\n          y: BUTTON_START_LEFT_y - BUTTON_HEIGHT * 0.8,\r\n          width: BUTTON_WIDTH,\r\n          height: BUTTON_HEIGHT,\r\n        },\r\n        {\r\n          x: BUTTON_START_LEFT_X + BUTTON_WIDTH + horizonalMargin,\r\n          y: BUTTON_START_LEFT_y,\r\n          width: BUTTON_WIDTH,\r\n          height: BUTTON_HEIGHT,\r\n        },\r\n        {\r\n          x: BUTTON_START_LEFT_X + BUTTON_WIDTH / 2 + horizonalMargin / 2,\r\n          y: BUTTON_START_LEFT_y + BUTTON_HEIGHT * 0.8,\r\n          width: BUTTON_WIDTH,\r\n          height: BUTTON_HEIGHT,\r\n        },\r\n      ];\r\n\r\n      worldState.buttonRect = buttonRect;\r\n      worldState.finishRect = finishRect;\r\n    },\r\n    update(\r\n      delta,\r\n      worldState,\r\n      { batch, camera, width, height, whiteTex, inputHandler }\r\n    ) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n\r\n      if (worldState.finishedPhase && !worldState.hitFinishButton) {\r\n        scaleButton = Math.max(0.7, (scaleButton -= delta * 2));\r\n        scaleFinish = Math.min(1, (scaleFinish += delta * 4));\r\n      } else if (!worldState.finishedPhase || worldState.hitFinishButton) {\r\n        scaleButton = Math.min(1, (scaleButton += delta * 2));\r\n        scaleFinish = Math.max(0.4, (scaleFinish -= delta * 4));\r\n      }\r\n\r\n      if (worldState.finishedPhase) {\r\n        // start effect\r\n        worldState.starEffect.scale1 += (delta * 47) / 3;\r\n        batch.setColor(1, 1, 1, worldState.starEffect.opacity1);\r\n        starEffect.draw(\r\n          batch,\r\n          finishRect.x + finishRect.width / 2 - SE_WIDHT / 2,\r\n          finishRect.y + finishRect.height / 2 - SE_HEIGHT / 2,\r\n          SE_WIDHT,\r\n          SE_HEIGHT,\r\n          SE_WIDHT / 2,\r\n          SE_HEIGHT / 2,\r\n          0,\r\n          worldState.starEffect.scale1,\r\n          worldState.starEffect.scale1\r\n        );\r\n        batch.setColor(1, 1, 1, 1);\r\n        if (worldState.starEffect.scale1 >= 4) {\r\n          worldState.starEffect.scale2 += (delta * 47) / 3;\r\n          batch.setColor(1, 1, 1, worldState.starEffect.opacity2);\r\n          starEffect.draw(\r\n            batch,\r\n            finishRect.x + finishRect.width / 2 - SE_WIDHT / 2,\r\n            finishRect.y + finishRect.height / 2 - SE_HEIGHT / 2,\r\n            SE_WIDHT,\r\n            SE_HEIGHT,\r\n            SE_WIDHT / 2,\r\n            SE_HEIGHT / 2,\r\n            0,\r\n            worldState.starEffect.scale2,\r\n            worldState.starEffect.scale2\r\n          );\r\n          batch.setColor(1, 1, 1, 1);\r\n        }\r\n        worldState.starEffect.scale1 = Math.min(\r\n          6,\r\n          worldState.starEffect.scale1\r\n        );\r\n        if (worldState.starEffect.scale1 === 6) {\r\n          worldState.starEffect.opacity1 = Math.max(\r\n            0,\r\n            (worldState.starEffect.opacity1 -= delta * 5)\r\n          );\r\n        }\r\n\r\n        worldState.starEffect.scale2 = Math.min(\r\n          6,\r\n          worldState.starEffect.scale2\r\n        );\r\n        if (worldState.starEffect.scale2 === 6) {\r\n          worldState.starEffect.opacity2 = Math.max(\r\n            0,\r\n            (worldState.starEffect.opacity2 -= delta * 5)\r\n          );\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < buttonRect.length; i++) {\r\n        let texture;\r\n        if (worldState.keyActivated[i]) {\r\n          texture = buttonTex[i].press;\r\n        } else {\r\n          texture = buttonTex[i].unpress;\r\n        }\r\n\r\n        texture.draw(\r\n          batch,\r\n          buttonRect[i].x,\r\n          buttonRect[i].y,\r\n          buttonRect[i].width,\r\n          buttonRect[i].height,\r\n          buttonRect[i].width / 2,\r\n          buttonRect[i].height / 2,\r\n          0,\r\n          scaleButton,\r\n          scaleButton\r\n        );\r\n\r\n        // fillRect(\r\n        //   batch,\r\n        //   whiteTex,\r\n        //   buttonRect[i].x,\r\n        //   buttonRect[i].y,\r\n        //   buttonRect[i].width,\r\n        //   buttonRect[i].height\r\n        // );\r\n      }\r\n\r\n      finishTex.draw(\r\n        batch,\r\n        finishRect.x,\r\n        finishRect.y,\r\n        finishRect.width,\r\n        finishRect.height,\r\n        finishRect.width / 2,\r\n        finishRect.height / 2,\r\n        0,\r\n        scaleFinish,\r\n        scaleFinish\r\n      );\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createRenderArrowButtonSystem;\r\n","import { Vector2 } from \"gdxjs\";\r\nconst activateKey = (key, keyActivated) => (keyActivated[key] = true);\r\nconst deactivateKey = (key, keyActivated) => (keyActivated[key] = false);\r\n\r\nconst getRectContainPoint = (x, y, buttonRect) => {\r\n  let index = -1;\r\n  for (let i = 0; i < 4; i++) {\r\n    const rect = buttonRect[i];\r\n    if (\r\n      x > rect.x &&\r\n      x < rect.x + rect.width &&\r\n      y > rect.y &&\r\n      y < rect.y + rect.height\r\n    ) {\r\n      return i;\r\n    }\r\n  }\r\n  return index;\r\n};\r\n\r\nconst getRectPassButtonPoint = (x, y, rect) => {\r\n  if (\r\n    x > rect.x &&\r\n    x < rect.x + rect.width &&\r\n    y > rect.y &&\r\n    y < rect.y + rect.height\r\n  ) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst checkHitRight = (type, notes, phaseIndex, worldState) => {\r\n  if (type === notes[phaseIndex][worldState.currentCheckingNoteIndex].type) {\r\n    notes[phaseIndex][worldState.currentCheckingNoteIndex].activated = true;\r\n    worldState.zoomOutNoteIndexs.push(worldState.currentCheckingNoteIndex);\r\n    worldState.currentCheckingNoteIndex += 1;\r\n    if (worldState.currentCheckingNoteIndex === notes[phaseIndex].length) {\r\n      worldState.currentCheckingNoteIndex = notes[phaseIndex].length - 1;\r\n      worldState.finishedPhase = true;\r\n    }\r\n  } else {\r\n    // MISS++;\r\n    worldState.currentCheckingNoteIndex = 0;\r\n    for (let i = 0; i < notes[phaseIndex].length; i++) {\r\n      notes[phaseIndex][i].activated = false;\r\n    }\r\n  }\r\n};\r\n\r\nconst createInputHandleGameScreenSystem = () => {\r\n  let rectTouches;\r\n  let coord = new Vector2();\r\n\r\n  return {\r\n    init(worldState, { canvas, camera, pixelRatio, inputHandler }) {\r\n      const { buttonRect, notes, finishRect } = worldState;\r\n\r\n      inputHandler.addEventListener(\"touchStart\", (x, y, id) => {\r\n        if (!worldState.runIntro) {\r\n          coord.setVector(inputHandler.getTouchedWorldCoord());\r\n          const rectIndex = getRectContainPoint(coord.x, coord.y, buttonRect);\r\n          if (rectIndex > -1 && !worldState.finishedPhase) {\r\n            rectTouches = rectIndex;\r\n            activateKey(rectIndex, worldState.keyActivated);\r\n            checkHitRight(rectIndex, notes, worldState.phaseIndex, worldState);\r\n          } else if (worldState.finishedPhase) {\r\n            const rectButton = getRectPassButtonPoint(\r\n              coord.x,\r\n              coord.y,\r\n              finishRect\r\n            );\r\n            if (rectButton === 1) {\r\n              if (worldState.canPassPhase) {\r\n                // console.log(\"hit\");\r\n                worldState.hit++;\r\n                worldState.hitRight = true;\r\n                // HIT++;\r\n              } else {\r\n                // console.log(\"miss\");\r\n                worldState.miss++;\r\n                // worldState.anim[worldState.animIndex] = worldState.missAnim;\r\n                // MISS++;\r\n                worldState.hitMiss = true;\r\n              }\r\n              worldState.disableNode = true;\r\n              worldState.hitFinishButton = true;\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      inputHandler.addEventListener(\"touchEnd\", (id) => {\r\n        deactivateKey(rectTouches, worldState.keyActivated);\r\n      });\r\n\r\n      document.addEventListener(\"keydown\", (e) => {\r\n        if (!worldState.runIntro) {\r\n          if (e.which === 65) {\r\n            if (!worldState.finishedPhase) {\r\n              activateKey(0, worldState.keyActivated);\r\n              checkHitRight(0, notes, worldState.phaseIndex, worldState);\r\n            }\r\n          } else if (e.which === 87) {\r\n            if (!worldState.finishedPhase) {\r\n              activateKey(1, worldState.keyActivated);\r\n              checkHitRight(1, notes, worldState.phaseIndex, worldState);\r\n            }\r\n          } else if (e.which === 68) {\r\n            if (!worldState.finishedPhase) {\r\n              activateKey(2, worldState.keyActivated);\r\n              checkHitRight(2, notes, worldState.phaseIndex, worldState);\r\n            }\r\n          } else if (e.which === 83) {\r\n            if (!worldState.finishedPhase) {\r\n              activateKey(3, worldState.keyActivated);\r\n              checkHitRight(3, notes, worldState.phaseIndex, worldState);\r\n            }\r\n          }\r\n\r\n          if (worldState.finishedPhase && e.which === 32) {\r\n            if (worldState.canPassPhase) {\r\n              // console.log(\"hit\");\r\n              worldState.hit++;\r\n              worldState.hitRight = true;\r\n              // HIT++;\r\n            } else {\r\n              // console.log(\"miss\");\r\n              worldState.miss++;\r\n              worldState.hitMiss = true;\r\n            }\r\n            worldState.disableNode = true;\r\n            worldState.hitFinishButton = true;\r\n          }\r\n        }\r\n      });\r\n\r\n      document.addEventListener(\"keyup\", (e) => {\r\n        if (e.which === 65) {\r\n          deactivateKey(0, worldState.keyActivated);\r\n        } else if (e.which === 87) {\r\n          deactivateKey(1, worldState.keyActivated);\r\n        } else if (e.which === 68) {\r\n          deactivateKey(2, worldState.keyActivated);\r\n        } else if (e.which === 83) {\r\n          deactivateKey(3, worldState.keyActivated);\r\n        }\r\n      });\r\n    },\r\n    update() {},\r\n  };\r\n};\r\n\r\nexport default createInputHandleGameScreenSystem;\r\n","const createButtonRenderSystem = () => {\r\n  let buttonTex = [];\r\n\r\n  return {\r\n    init(worldState, { assets }) {\r\n      const atlas = assets.auditionAtlas;\r\n\r\n      const downBtn = atlas.findRegion(\"down-btn\", -1);\r\n      const upBtn = atlas.findRegion(\"up-btn\", -1);\r\n      const leftBtn = atlas.findRegion(\"left-btn\", -1);\r\n      const rightBtn = atlas.findRegion(\"right-btn\", -1);\r\n\r\n      const downBtnGray = atlas.findRegion(\"down-btn-gray\", -1);\r\n      const upBtnGray = atlas.findRegion(\"up-btn-gray\", -1);\r\n      const leftBtnGray = atlas.findRegion(\"left-btn-gray\", -1);\r\n      const rightBtnGray = atlas.findRegion(\"right-btn-gray\", -1);\r\n\r\n      buttonTex = [\r\n        { active: leftBtn, passive: leftBtnGray },\r\n        { active: upBtn, passive: upBtnGray },\r\n        { active: rightBtn, passive: rightBtnGray },\r\n        { active: downBtn, passive: downBtnGray },\r\n      ];\r\n    },\r\n    update(\r\n      delta,\r\n      {\r\n        notes,\r\n        noteInfos,\r\n        currentCheckingNoteIndex,\r\n        phaseIndex,\r\n        zoomOutNoteIndexs,\r\n        zoomOutNoteInfos,\r\n        runIntro,\r\n        hitFinishButton,\r\n      },\r\n\r\n      { batch, width, height, camera }\r\n    ) {\r\n      let currentNotesPhase = noteInfos[phaseIndex];\r\n      let currentNotesInfos = notes[phaseIndex];\r\n      let texture;\r\n\r\n      for (let i = 0; i < zoomOutNoteIndexs.length; i++) {\r\n        let index = zoomOutNoteIndexs[i];\r\n        zoomOutNoteInfos.push({\r\n          tex: buttonTex[currentNotesInfos[index].type].passive,\r\n          scale: 2,\r\n          postion: currentNotesPhase[index],\r\n        });\r\n        zoomOutNoteIndexs.splice(i, 1);\r\n      }\r\n\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n      if (!hitFinishButton && !runIntro) {\r\n        for (let i = currentNotesPhase.length - 1; i >= 0; i--) {\r\n          let note = currentNotesPhase[i];\r\n          texture =\r\n            currentNotesInfos[i].activated === true\r\n              ? buttonTex[currentNotesInfos[i].type].active\r\n              : buttonTex[currentNotesInfos[i].type].passive;\r\n          texture.draw(batch, note.x, note.y, note.width, note.height);\r\n\r\n          if (zoomOutNoteInfos[i]) {\r\n            zoomOutNoteInfos[i].scale -= delta * 4;\r\n            let { tex, postion } = zoomOutNoteInfos[i];\r\n            batch.setColor(1, 1, 1, 0.5);\r\n            tex.draw(\r\n              batch,\r\n              postion.x,\r\n              postion.y,\r\n              postion.width,\r\n              postion.height,\r\n              postion.width / 2,\r\n              postion.height / 2,\r\n              0,\r\n              zoomOutNoteInfos[i].scale,\r\n              zoomOutNoteInfos[i].scale\r\n            );\r\n            batch.setColor(1, 1, 1, 1);\r\n            if (zoomOutNoteInfos[i].scale <= 1.1) {\r\n              zoomOutNoteInfos.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createButtonRenderSystem;\r\n","import { fillRect } from \"gdxjs\";\r\n\r\nconst checkScoreType = (\r\n  realTimeDurationSet,\r\n  stateTime,\r\n  durationEachPhase,\r\n  durationZone,\r\n  scoreType,\r\n  textList,\r\n  textListInfos\r\n) => {\r\n  let texture;\r\n  let centerTime =\r\n    durationEachPhase - (2.3 / 4) * durationEachPhase - durationZone / 2;\r\n  let minTime = durationZone / 5;\r\n  if (\r\n    realTimeDurationSet - stateTime < centerTime + minTime / 2 &&\r\n    realTimeDurationSet - stateTime > centerTime - minTime / 2\r\n  ) {\r\n    // console.log(\"perfect\");\r\n    scoreType = \"perfect\";\r\n    texture = { tex: textList[0], infos: textListInfos[0] };\r\n  } else if (\r\n    (realTimeDurationSet - stateTime < centerTime - minTime / 2 &&\r\n      realTimeDurationSet - stateTime > centerTime - (minTime * 3) / 2) ||\r\n    (realTimeDurationSet - stateTime < centerTime + (minTime * 3) / 2 &&\r\n      realTimeDurationSet - stateTime > centerTime + minTime / 2)\r\n  ) {\r\n    // console.log(\"great\");\r\n    scoreType = \"great\";\r\n    texture = { tex: textList[1], infos: textListInfos[1] };\r\n  } else if (\r\n    (realTimeDurationSet - stateTime < centerTime - (minTime * 3) / 2 &&\r\n      realTimeDurationSet - stateTime > centerTime - (minTime * 5) / 2) ||\r\n    (realTimeDurationSet - stateTime < centerTime + (minTime * 5) / 2 &&\r\n      realTimeDurationSet - stateTime > centerTime + (minTime * 3) / 2)\r\n  ) {\r\n    // console.log(\"cool\");\r\n    scoreType = \"cool\";\r\n    texture = { tex: textList[2], infos: textListInfos[2] };\r\n  } else {\r\n    scoreType = \"miss\";\r\n    texture = { tex: textList[3], infos: textListInfos[3] };\r\n  }\r\n\r\n  return texture;\r\n  // return scoreType;\r\n};\r\n\r\nconst createDurationRenderSystem = () => {\r\n  let finishBarInfos = {};\r\n  let finishMetterInfos = {};\r\n  let finishMarkInfos = {};\r\n  let finishBar, finishMark, finishMetter, markEffect;\r\n  let durationZone;\r\n  let BAR_WIDTH, METTER_WIDTH, MARK_WIDTH, ME_WIDTH, ME_HEIGHT;\r\n  let scoreType;\r\n  let cool, great, perfect, miss, textList;\r\n  let coolInfos, greatInfos, perfectInfos, missInfos, textListInfos;\r\n  return {\r\n    init({ boundaryY }, { assets, width, height }) {\r\n      const atlas = assets.auditionAtlas;\r\n      const finishAtlas = assets.finishAtlas;\r\n\r\n      finishBar = assets.finishBar;\r\n\r\n      finishMetter = assets.mask;\r\n      finishMark = atlas.findRegion(\"finish_mark\", -1);\r\n      markEffect = finishAtlas.findRegion(\"finsh_mark_effect\", -1);\r\n\r\n      cool = finishAtlas.findRegion(\"cool\", -1);\r\n      great = finishAtlas.findRegion(\"great\", -1);\r\n      perfect = finishAtlas.findRegion(\"perfect\", -1);\r\n      miss = finishAtlas.findRegion(\"miss\", -1);\r\n\r\n      textList = [perfect, great, cool, miss];\r\n      const COOL_H = height / 25;\r\n      const COOL_W = (COOL_H * cool.width) / cool.height;\r\n      const GREAT_H = height / 25;\r\n      const GREAT_W = (GREAT_H * great.width) / great.height;\r\n      const PERFECT_H = height / 25;\r\n      const PERFECT_W = (PERFECT_H * perfect.width) / perfect.height;\r\n      const MISS_H = height / 25;\r\n      const MISS_W = (MISS_H * miss.width) / miss.height;\r\n\r\n      coolInfos = { width: COOL_W, height: COOL_H };\r\n      greatInfos = { width: GREAT_W, height: GREAT_H };\r\n      perfectInfos = { width: PERFECT_W, height: PERFECT_H };\r\n      missInfos = { width: MISS_W, height: MISS_H };\r\n      textListInfos = [perfectInfos, greatInfos, coolInfos, missInfos];\r\n\r\n      BAR_WIDTH = (width * 8.6) / 9;\r\n      const BAR_HEIGHT = (BAR_WIDTH * finishBar.height) / finishBar.width;\r\n      const BAR_START_X = (width - BAR_WIDTH) / 2;\r\n\r\n      MARK_WIDTH = BAR_WIDTH / 30;\r\n      const MARK_HEIGHT = (MARK_WIDTH * finishMark.height) / finishMark.width;\r\n\r\n      markEffect = finishAtlas.findRegion(\"finsh_mark_effect\", -1);\r\n      ME_WIDTH = MARK_WIDTH;\r\n      ME_HEIGHT = (ME_WIDTH * markEffect.height) / markEffect.width;\r\n\r\n      METTER_WIDTH = BAR_WIDTH / 4;\r\n      const METTER_HEIGHT = (BAR_HEIGHT * 2.5) / 4;\r\n\r\n      finishBarInfos = {\r\n        x: BAR_START_X,\r\n        y: boundaryY + height / 40,\r\n        width: BAR_WIDTH,\r\n        height: BAR_HEIGHT,\r\n      };\r\n\r\n      finishMetterInfos = {\r\n        x: BAR_START_X + (2.3 / 4) * BAR_WIDTH,\r\n        y: finishBarInfos.y + BAR_HEIGHT / 2 - METTER_HEIGHT / 2,\r\n        width: METTER_WIDTH,\r\n        height: METTER_HEIGHT,\r\n      };\r\n\r\n      finishMarkInfos = {\r\n        y: finishBarInfos.y + BAR_HEIGHT / 2 - MARK_HEIGHT / 2,\r\n        width: MARK_WIDTH,\r\n        height: MARK_HEIGHT,\r\n      };\r\n    },\r\n    update(delta, worldState, { width, height, batch, camera }) {\r\n      let { stateTime, realTimeDurationSet, durationEachPhase } = worldState;\r\n      finishMarkInfos.x =\r\n        finishBarInfos.x +\r\n        BAR_WIDTH -\r\n        ((realTimeDurationSet - stateTime) / durationEachPhase) * BAR_WIDTH;\r\n\r\n      durationZone = (METTER_WIDTH * durationEachPhase) / BAR_WIDTH;\r\n\r\n      if (\r\n        realTimeDurationSet - stateTime <\r\n          durationEachPhase - (2.3 / 4) * durationEachPhase &&\r\n        realTimeDurationSet - stateTime >\r\n          durationEachPhase - (2.3 / 4) * durationEachPhase - durationZone &&\r\n        worldState.finishedPhase\r\n      ) {\r\n        worldState.canPassPhase = true;\r\n      } else {\r\n        worldState.canPassPhase = false;\r\n      }\r\n\r\n      //render\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      fillRect(\r\n        batch,\r\n        finishBar,\r\n        finishBarInfos.x,\r\n        finishBarInfos.y,\r\n        finishBarInfos.width,\r\n        finishBarInfos.height\r\n      );\r\n\r\n      // draw finish METTER\r\n      batch.setColor(1, 1, 1, 0.5);\r\n      fillRect(\r\n        batch,\r\n        finishMetter,\r\n        finishMetterInfos.x,\r\n        finishMetterInfos.y,\r\n        finishMetterInfos.width,\r\n        finishMetterInfos.height\r\n      );\r\n      batch.setColor(1, 1, 1, 0.75);\r\n      fillRect(\r\n        batch,\r\n        finishMetter,\r\n        finishMetterInfos.x + finishMetterInfos.width / 5,\r\n        finishMetterInfos.y,\r\n        (finishMetterInfos.width * 3) / 5,\r\n        finishMetterInfos.height\r\n      );\r\n      batch.setColor(1, 1, 1, 1);\r\n      fillRect(\r\n        batch,\r\n        finishMetter,\r\n        finishMetterInfos.x + (finishMetterInfos.width * 2) / 5,\r\n        finishMetterInfos.y,\r\n        finishMetterInfos.width / 5,\r\n        finishMetterInfos.height\r\n      );\r\n\r\n      // draw text\r\n      if (worldState.hitFinishButton) {\r\n        let texture = checkScoreType(\r\n          realTimeDurationSet,\r\n          stateTime,\r\n          durationEachPhase,\r\n          durationZone,\r\n          scoreType,\r\n          textList,\r\n          textListInfos\r\n        );\r\n        worldState.textPopUp.startY = Math.max(\r\n          (height * 1.1) / 3,\r\n          (worldState.textPopUp.startY -= (delta * height) / 3)\r\n        );\r\n\r\n        // console.log(worldState.textPopUp.scale);\r\n        worldState.textPopUp.scale = Math.min(\r\n          1,\r\n          (worldState.textPopUp.scale += delta * 5)\r\n        );\r\n\r\n        if (worldState.textPopUp.startY === (height * 1.1) / 3) {\r\n          worldState.textPopUp.opacity = Math.max(\r\n            0,\r\n            (worldState.textPopUp.opacity -= delta)\r\n          );\r\n        }\r\n\r\n        batch.setColor(1, 1, 1, worldState.textPopUp.opacity);\r\n        texture.tex.draw(\r\n          batch,\r\n          width / 2 - texture.infos.width / 2,\r\n          worldState.textPopUp.startY,\r\n          texture.infos.width,\r\n          texture.infos.height,\r\n          texture.infos.width / 2,\r\n          texture.infos.height / 2,\r\n          0,\r\n          worldState.textPopUp.scale,\r\n          worldState.textPopUp.scale\r\n        );\r\n      }\r\n\r\n      if (!worldState.runIntro) {\r\n        if (!worldState.hitFinishButton) {\r\n          if (finishMarkInfos.x <= BAR_WIDTH + finishMarkInfos.width / 2) {\r\n            worldState.finishMarkEffect = { scale: 1, opacity: 1 };\r\n            finishMark.draw(\r\n              batch,\r\n              finishMarkInfos.x - finishMarkInfos.width / 2,\r\n              finishMarkInfos.y,\r\n              finishMarkInfos.width,\r\n              finishMarkInfos.height\r\n            );\r\n          }\r\n        } else {\r\n          // mark effect\r\n          worldState.finishMarkEffect.scale = Math.min(\r\n            2.3,\r\n            (worldState.finishMarkEffect.scale += delta * 10)\r\n          );\r\n          if (worldState.finishMarkEffect.scale === 2.3) {\r\n            worldState.finishMarkEffect.opacity = Math.max(\r\n              0,\r\n              (worldState.finishMarkEffect.opacity -= delta * 5)\r\n            );\r\n          }\r\n          batch.setColor(1, 1, 1, worldState.finishMarkEffect.opacity);\r\n          markEffect.draw(\r\n            batch,\r\n            finishMarkInfos.x +\r\n              finishMarkInfos.width / 2 -\r\n              ME_WIDTH / 2 -\r\n              finishMarkInfos.width / 2,\r\n            finishMarkInfos.y + finishMarkInfos.height / 2 - ME_HEIGHT / 2,\r\n            ME_WIDTH,\r\n            ME_HEIGHT,\r\n            ME_WIDTH / 2,\r\n            ME_HEIGHT / 2,\r\n            0,\r\n            worldState.finishMarkEffect.scale,\r\n            worldState.finishMarkEffect.scale\r\n          );\r\n          batch.setColor(1, 1, 1, 1);\r\n        }\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createDurationRenderSystem;\r\n","import createOrthoCamera2 from \"../components/orthoCamera2\";\r\nimport { resizeCanvas } from \"gdxjs\";\r\n\r\nconst createHandAnimationRenderSystem = () => {\r\n  let camera;\r\n  const animOffset = {\r\n    bam_sai: {\r\n      x: 0,\r\n      y: 3,\r\n    },\r\n    buom_bay_right: {\r\n      x: 5,\r\n      y: -3,\r\n    },\r\n    xoa_tay: {\r\n      x: -5,\r\n      y: -5,\r\n    },\r\n    buom_bay_left: {\r\n      x: 7,\r\n      y: -3,\r\n    },\r\n    choang_nhau: {\r\n      x: 7,\r\n      y: 0,\r\n    },\r\n    tinh_ban: {\r\n      x: 9,\r\n      y: 2,\r\n    },\r\n    ca_sau: {\r\n      x: 4,\r\n      y: 5,\r\n    },\r\n  };\r\n  let offsetX, offsetY, DRAW_WIDTH, DRAW_HEIGHT;\r\n  return {\r\n    init(worldState, { width, height, canvas, pixelRatio, spriter }) {\r\n      const [cWidth, cHeight] = resizeCanvas(canvas, pixelRatio);\r\n      camera = createOrthoCamera2(width, height, cWidth, cHeight);\r\n      DRAW_WIDTH = width;\r\n      DRAW_HEIGHT = DRAW_HEIGHT = width / spriter.getAspect();\r\n      spriter.setEntity(\"hands\");\r\n    },\r\n    update(delta, worldState, { spriter, batch, width, height, pixelRatio }) {\r\n      // if (!worldState.runIntro) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      spriter.setAnim(worldState.anim);\r\n      spriter.update(delta * 1000);\r\n      offsetX = 0;\r\n      offsetY = 0;\r\n      const offset = animOffset[spriter.getAnim()];\r\n      if (offset) {\r\n        offsetX = offset.x;\r\n        offsetY = offset.y;\r\n      }\r\n      spriter.draw(\r\n        batch,\r\n        0 + offsetX,\r\n        height / 2 - DRAW_HEIGHT / 2 + offsetY,\r\n        DRAW_WIDTH * 1.2,\r\n        DRAW_HEIGHT * 1.2,\r\n        width / height\r\n      );\r\n      batch.end();\r\n      // }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createHandAnimationRenderSystem;\r\n","import { mat4 } from \"gl-matrix\";\r\nimport { unproject } from \"gdxjs/lib/mathUtils\";\r\nexport default (width, height, viewportWidth, viewportHeight) => {\r\n  const combined = mat4.create();\r\n  const transform = mat4.create();\r\n  const invOrtho = mat4.create();\r\n  const lookAtMatrix = mat4.create();\r\n  const position = [0, 0];\r\n  const NEAR = 0;\r\n  const FAR = 1;\r\n  const tmp3 = [0, 0, 0];\r\n  const eye = [0, 0, FAR];\r\n  const center = [0, 0, NEAR];\r\n  const up = [0, 1, 0];\r\n\r\n  const update = () => {\r\n    mat4.ortho(\r\n      combined,\r\n      -width / 2,\r\n      width / 2,\r\n      -height / 2,\r\n      height / 2,\r\n      NEAR,\r\n      FAR\r\n    );\r\n    const x = position[0];\r\n    const y = position[1];\r\n    eye[0] = center[0] = x;\r\n    eye[1] = center[1] = y;\r\n    mat4.identity(transform);\r\n    mat4.lookAt(lookAtMatrix, eye, center, up);\r\n    mat4.mul(transform, transform, lookAtMatrix);\r\n    mat4.mul(combined, combined, transform);\r\n    mat4.invert(invOrtho, combined);\r\n  };\r\n\r\n  update();\r\n  return {\r\n    combined,\r\n\r\n    setMatrix(mat) {\r\n      mat4.copy(combined, mat);\r\n      mat4.invert(invOrtho, combined);\r\n    },\r\n\r\n    setYUp(yUp) {\r\n      if (yUp) {\r\n        up[1] = -1;\r\n      } else {\r\n        up[1] = 1;\r\n      }\r\n\r\n      update();\r\n    },\r\n\r\n    setPosition(x, y) {\r\n      position[0] = x;\r\n      position[1] = y;\r\n      update();\r\n    },\r\n\r\n    unprojectVector2(out, input) {\r\n      tmp3[0] = input.x;\r\n      tmp3[1] = input.y;\r\n      tmp3[2] = 0;\r\n      unproject(tmp3, tmp3, invOrtho, 0, 0, viewportWidth, viewportHeight);\r\n      out.set(tmp3[0], tmp3[1]);\r\n    },\r\n\r\n    resize(newWidth, newHeight) {\r\n      width = newWidth;\r\n      height = newHeight;\r\n      update();\r\n    },\r\n  };\r\n};\r\n","import { fillRect } from \"gdxjs\";\r\n\r\nconst createCurtainRenderSystem = () => {\r\n  let curtainInfors = {};\r\n  return {\r\n    init(worldState, { assets, width }) {\r\n      const curtain = assets.curtain;\r\n      const CURTAIN_WIDTH = width;\r\n      const CURTAIN_HEIGHT = (CURTAIN_WIDTH * curtain.height) / curtain.width;\r\n      curtainInfors = { tex: curtain, w: CURTAIN_WIDTH, h: CURTAIN_HEIGHT };\r\n    },\r\n    update(delta, worldState, { camera, batch }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n      fillRect(\r\n        batch,\r\n        curtainInfors.tex,\r\n        0,\r\n        0,\r\n        curtainInfors.w,\r\n        curtainInfors.h\r\n      );\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createCurtainRenderSystem;\r\n","const createCaroRenderSystem = () => {\r\n  let backGroundInfos = {};\r\n  return {\r\n    init(worldState, { assets, width }) {\r\n      let atlas = assets.auditionAtlas;\r\n      const bg = atlas.findRegion(\"bg\", -1);\r\n      const BG_WIDTH = width;\r\n      const BG_HEIGHT = (BG_WIDTH * bg.height) / bg.width;\r\n      backGroundInfos = { tex: bg, w: BG_WIDTH, h: BG_HEIGHT };\r\n    },\r\n    update(delta, worldState, { batch, camera, width }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n      backGroundInfos.tex.draw(\r\n        batch,\r\n        width / 2 - backGroundInfos.w / 2,\r\n        -backGroundInfos.h / 30,\r\n        backGroundInfos.w,\r\n        backGroundInfos.h\r\n      );\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createCaroRenderSystem;\r\n","export const checkPointInsideRect = (point, verts, DEVICE_PIXEL_RATIO = 1) => {\r\n  const x = point.x * DEVICE_PIXEL_RATIO;\r\n  const y = point.y * DEVICE_PIXEL_RATIO;\r\n  // const minX = Math.min(verts[0], verts[2], verts[4], verts[6]);\r\n  // const maxX = Math.max(verts[0], verts[2], verts[4], verts[6]);\r\n  // const minY = Math.min(verts[1], verts[3], verts[5], verts[7]);\r\n  // const maxY = Math.max(verts[1], verts[3], verts[5], verts[7]);\r\n\r\n  const minX = verts[0];\r\n  const maxX = verts[0] + verts[2];\r\n  const minY = verts[1];\r\n  const maxY = verts[1] + verts[3];\r\n  if (x < minX || x > maxX || y < minY || y > maxY) return false;\r\n  return true;\r\n};\r\n","import { createViewportAwareInputHandler, fillRect } from \"gdxjs\";\r\nimport createRenderStartScreenSystem from \"./StartScreen\";\r\nimport { checkPointInsideRect } from \"../utils/coordUtils\";\r\n\r\nconst caculateString = (infos, numberInfos, width, percentageInfos) => {\r\n  let sumLength = 0;\r\n  let numberList = [];\r\n  for (let i = 0; i < infos.length; i++) {\r\n    sumLength += numberInfos[i].width;\r\n  }\r\n  sumLength += percentageInfos.width;\r\n  const START_X = width / 2 - sumLength / 2;\r\n\r\n  let distanceTmp = 0;\r\n  for (let i = 0; i < infos.length; i++) {\r\n    let numberWidth = numberInfos[i - 1] ? numberInfos[i - 1].width : 0;\r\n    distanceTmp += numberWidth;\r\n    numberList.push({\r\n      tex: numberInfos[infos[i]].tex,\r\n      x: START_X + distanceTmp,\r\n      width: numberInfos[i].width,\r\n    });\r\n  }\r\n  distanceTmp += numberInfos[numberInfos.length - 1].width;\r\n  numberList.push({\r\n    tex: percentageInfos.tex,\r\n    x: START_X + distanceTmp,\r\n    width: percentageInfos.width,\r\n  });\r\n\r\n  return numberList;\r\n};\r\n\r\nconst getStringInfos = (result) => {\r\n  let infos = [];\r\n  for (let i = 0; i < result.length; i++) {\r\n    const char = result.charAt(i);\r\n    infos.push(parseInt(char));\r\n  }\r\n  return infos;\r\n};\r\n\r\nconst createRenderEndScreenSystem = (Game) => {\r\n  const goToStartScreen = async () => {\r\n    Game.setCurrentScreen(await createRenderStartScreenSystem(Game));\r\n  };\r\n  const { batch, canvas, width, height, camera, viewport, assets } = Game;\r\n  const inputHandler = createViewportAwareInputHandler(canvas, viewport);\r\n  const atlas = assets.auditionAtlas;\r\n  const startEndAtlas = assets.startEndAtlas;\r\n\r\n  const table = atlas.findRegion(\"table\", -1);\r\n  const TABLE_WIDTH = width;\r\n  const TABLE_HEIGHT = (TABLE_WIDTH * table.height) / table.width;\r\n\r\n  const bg = atlas.findRegion(\"bg\", -1);\r\n  const BG_WIDTH = width;\r\n  const BG_HEIGHT = (BG_WIDTH * bg.height) / bg.width;\r\n\r\n  const curtain = assets.curtain;\r\n  const CURTAIN_WIDTH = width;\r\n  const CURTAIN_HEIGHT = (CURTAIN_WIDTH * curtain.height) / curtain.width;\r\n\r\n  const restartButton = startEndAtlas.findRegion(\"restart_button\", -1);\r\n  const quote = startEndAtlas.findRegion(\"quote\", -1);\r\n  const yourScore = startEndAtlas.findRegion(\"your_score\", -1);\r\n  const percentage = startEndAtlas.findRegion(\"percentage\", -1);\r\n\r\n  const RB_WIDTH = width / 4.5;\r\n  const RB_HEIGHT = (RB_WIDTH * restartButton.height) / restartButton.width;\r\n  const RB_START_X = width / 2 - RB_WIDTH / 2;\r\n  const RB_START_Y = (height * 2.3) / 3;\r\n\r\n  const buttonRect = [RB_START_X, RB_START_Y, RB_WIDTH, RB_HEIGHT];\r\n\r\n  const Q_WIDHT = width * 0.95;\r\n  const Q_HEIGHT = (Q_WIDHT * quote.height) / quote.width;\r\n\r\n  const YS_WIDTH = width / 1.8;\r\n  const YS_HEIGH = (YS_WIDTH * yourScore.height) / yourScore.width;\r\n\r\n  const number0 = startEndAtlas.findRegion(\"0_end\", -1);\r\n  const number1 = startEndAtlas.findRegion(\"1_end\", -1);\r\n  const number2 = startEndAtlas.findRegion(\"2_end\", -1);\r\n  const number3 = startEndAtlas.findRegion(\"3_end\", -1);\r\n  const number4 = startEndAtlas.findRegion(\"4_end\", -1);\r\n  const number5 = startEndAtlas.findRegion(\"5_end\", -1);\r\n  const number6 = startEndAtlas.findRegion(\"6_end\", -1);\r\n  const number7 = startEndAtlas.findRegion(\"7_end\", -1);\r\n  const number8 = startEndAtlas.findRegion(\"8_end\", -1);\r\n  const number9 = startEndAtlas.findRegion(\"9_end\", -1);\r\n\r\n  const NB_HEIGHT = height / 8;\r\n  const NB0_WIDHT = (NB_HEIGHT * number0.width) / number0.height;\r\n  const NB1_WIDHT = (NB_HEIGHT * number1.width) / number1.height;\r\n  const NB2_WIDHT = (NB_HEIGHT * number2.width) / number2.height;\r\n  const NB3_WIDHT = (NB_HEIGHT * number3.width) / number3.height;\r\n  const NB4_WIDHT = (NB_HEIGHT * number4.width) / number4.height;\r\n  const NB5_WIDHT = (NB_HEIGHT * number5.width) / number5.height;\r\n  const NB6_WIDHT = (NB_HEIGHT * number6.width) / number6.height;\r\n  const NB7_WIDHT = (NB_HEIGHT * number7.width) / number7.height;\r\n  const NB8_WIDHT = (NB_HEIGHT * number8.width) / number8.height;\r\n  const NB9_WIDHT = (NB_HEIGHT * number9.width) / number9.height;\r\n\r\n  const numberInfos = [\r\n    { tex: number0, width: NB0_WIDHT },\r\n    { tex: number1, width: NB1_WIDHT },\r\n    { tex: number2, width: NB2_WIDHT },\r\n    { tex: number3, width: NB3_WIDHT },\r\n    { tex: number4, width: NB4_WIDHT },\r\n    { tex: number5, width: NB5_WIDHT },\r\n    { tex: number6, width: NB6_WIDHT },\r\n    { tex: number7, width: NB7_WIDHT },\r\n    { tex: number8, width: NB8_WIDHT },\r\n    { tex: number9, width: NB9_WIDHT },\r\n  ];\r\n\r\n  const PT_HEIGHT = NB_HEIGHT;\r\n  const PT_WIDTH = (PT_HEIGHT * percentage.width) / percentage.height;\r\n  const percentageInfos = { tex: percentage, width: PT_WIDTH };\r\n\r\n  const result = Game.completePercentage.toString();\r\n  const stringInfos = getStringInfos(result, numberInfos);\r\n  const numberList = caculateString(\r\n    stringInfos,\r\n    numberInfos,\r\n    width,\r\n    percentageInfos\r\n  );\r\n\r\n  inputHandler.addEventListener(\"touchStart\", (x, y) => {\r\n    const point = inputHandler.getTouchedWorldCoord();\r\n    if (checkPointInsideRect({ x: point.x, y: point.y }, buttonRect)) {\r\n      Game.completePercentage = 0;\r\n      goToStartScreen();\r\n    }\r\n  });\r\n\r\n  const update = (delta) => {\r\n    // console.log(numberList);\r\n    batch.setProjection(camera.combined);\r\n    batch.begin();\r\n    batch.setColor(1, 1, 1, 1);\r\n    bg.draw(\r\n      batch,\r\n      width / 2 - BG_WIDTH / 2,\r\n      -BG_HEIGHT / 30,\r\n      BG_WIDTH,\r\n      BG_HEIGHT\r\n    );\r\n\r\n    table.draw(\r\n      batch,\r\n      width / 2 - TABLE_WIDTH / 2,\r\n      height / 2 - height / 20,\r\n      TABLE_WIDTH,\r\n      TABLE_HEIGHT\r\n    );\r\n\r\n    fillRect(batch, curtain, 0, 0, CURTAIN_WIDTH, CURTAIN_HEIGHT);\r\n\r\n    restartButton.draw(batch, RB_START_X, RB_START_Y, RB_WIDTH, RB_HEIGHT);\r\n    quote.draw(batch, width / 2 - Q_WIDHT / 2, height / 2, Q_WIDHT, Q_HEIGHT);\r\n    yourScore.draw(\r\n      batch,\r\n      width / 2 - YS_WIDTH / 2,\r\n      height / 4,\r\n      YS_WIDTH,\r\n      YS_HEIGH\r\n    );\r\n\r\n    for (let i = 0; i < numberList.length; i++) {\r\n      numberList[i].tex.draw(\r\n        batch,\r\n        numberList[i].x,\r\n        height / 3,\r\n        numberList[i].width,\r\n        NB_HEIGHT\r\n      );\r\n    }\r\n\r\n    batch.end();\r\n  };\r\n  return {\r\n    update,\r\n    destroy() {\r\n      inputHandler.cleanup();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createRenderEndScreenSystem;\r\n","import { createViewportAwareInputHandler } from \"gdxjs\";\r\nimport createWorld from \"../createWorld\";\r\nimport createBackGroundRenderSystem from \"../system/BgRenderSystem\";\r\nimport createRenderArrowButtonSystem from \"../system/ArrowButtonRenderSystem\";\r\nimport createInputHandleGameScreenSystem from \"../system/InputHandlerGameScreenSystem\";\r\nimport createButtonRenderSystem from \"../system/ButtonRenderSystem\";\r\nimport createDurationRenderSystem from \"../system/BarDurationRenderSystem\";\r\nimport createHandAnimationRenderSystem from \"../system/HandAnimationRenderSystem\";\r\nimport createCurtainRenderSystem from \"../system/CurtainRenderSystem\";\r\nimport createCaroRenderSystem from \"../system/CaroBgRenderSystem\";\r\nimport data from \"../data\";\r\n\r\nimport createRenderEndScreenSystem from \"./EndScreen\";\r\n\r\nexport default (Game) => {\r\n  const {\r\n    canvas,\r\n    width,\r\n    height,\r\n    gl,\r\n    batch,\r\n    whiteTex,\r\n    camera,\r\n    pixelRatio,\r\n    assets,\r\n    spriter,\r\n    viewport,\r\n    sound,\r\n  } = Game;\r\n\r\n  // const inputHandler = new InputHandler(canvas);\r\n  const inputHandler = createViewportAwareInputHandler(canvas, viewport);\r\n\r\n  const datas = data;\r\n  const lines = datas.split(\"\\n\");\r\n  const infos = [];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const value = lines[i].split(\",\").map((s) => s.trim());\r\n    infos.push({\r\n      start: parseFloat(value[0]),\r\n      duration: parseFloat(value[1]),\r\n      nodes: parseFloat(value[2]),\r\n      dancingDuration: parseFloat(value[3]),\r\n      anim: value[4],\r\n    });\r\n  }\r\n\r\n  let intro = infos[0];\r\n  infos.shift();\r\n\r\n  sound.play();\r\n\r\n  const scripts = [];\r\n  for (let i = 0; i < infos.length; i++) {\r\n    scripts.push(infos[i].nodes);\r\n  }\r\n\r\n  const notes = []; // chứa type, opacity mỗi nốt / phase\r\n\r\n  for (let s of scripts) {\r\n    const tmpArray = [];\r\n    for (let i = 0; i < s; i++) {\r\n      tmpArray.push({\r\n        type: Math.floor(Math.random() * 4),\r\n        activated: false,\r\n      });\r\n    }\r\n    notes.push(tmpArray);\r\n  }\r\n\r\n  // console.log(notes);\r\n  //  note information\r\n  const NOTE_SIZE = width / 7;\r\n  const NOTE_MARGIN = width / 100;\r\n  const NOTE_START_Y = height / 2 + height / 30;\r\n  const NOTE_RECTS = [];\r\n\r\n  for (let i = 0; i < notes.length; i++) {\r\n    const tmpArray = [];\r\n    let NOTE_Y = 0;\r\n    let NOTE_X = 0;\r\n    let length = 0;\r\n    for (let j = 0; j < notes[i].length; j++) {\r\n      let noteI = 0;\r\n      if (j <= 3) {\r\n        length = notes[i].length;\r\n        NOTE_X =\r\n          (width -\r\n            NOTE_MARGIN * (Math.min(4, length) - 1) -\r\n            NOTE_SIZE * Math.min(4, length)) /\r\n          2;\r\n        NOTE_Y = NOTE_START_Y;\r\n        noteI = j;\r\n      } else {\r\n        length = notes[i].length - 4;\r\n        NOTE_X = (width - NOTE_MARGIN * (length - 1) - NOTE_SIZE * length) / 2;\r\n        NOTE_Y = NOTE_START_Y + height / 14;\r\n        noteI = Math.abs(4 - j);\r\n      }\r\n\r\n      tmpArray.push({\r\n        x: NOTE_X + (NOTE_SIZE + NOTE_MARGIN) * noteI,\r\n        y: NOTE_Y,\r\n        width: NOTE_SIZE,\r\n        height: NOTE_SIZE,\r\n      });\r\n    }\r\n    NOTE_RECTS.push(tmpArray);\r\n  }\r\n\r\n  const missAnim = \"bam_sai\";\r\n\r\n  const worldState = {\r\n    runIntro: false,\r\n    hit: 0,\r\n    miss: 0,\r\n    anim: \"\",\r\n    missAnim: missAnim,\r\n    animIndex: -1,\r\n    stateTime: 0,\r\n    keyActivated: [],\r\n    boundaryY: height / 2 - height / 20,\r\n    gameOver: false,\r\n    buttonInfos: null,\r\n    durationBarInfos: {\r\n      duration: 4,\r\n      x: (width - (width * 4) / 5) / 2,\r\n      y: (height * 3) / 4,\r\n      width: (width * 4) / 5,\r\n      height: height / 10,\r\n    },\r\n    notes: notes,\r\n    noteInfos: NOTE_RECTS,\r\n    currentCheckingNoteIndex: 0,\r\n    phaseIndex: -1,\r\n    durationEachPhase: 4,\r\n    realTimeDurationSet: 4,\r\n    hitRight: false,\r\n    hitMiss: false,\r\n    canPassPhase: false, // check when mark in metter\r\n    finishedPhase: false, // check when all note finished\r\n    zoomOutNoteIndexs: [],\r\n    zoomOutNoteInfos: [],\r\n    hitFinishButton: false,\r\n    starEffect: { scale1: 1, opacity1: 1, scale2: 1, opacity2: 1 },\r\n    finishMarkEffect: { scale: 1, opacity: 1 },\r\n    textPopUp: { opacity: 1, scale: 0.5, startY: (height * 1.3) / 3 },\r\n  };\r\n\r\n  const extra = {\r\n    canvas,\r\n    width,\r\n    height,\r\n    gl,\r\n    batch,\r\n    whiteTex,\r\n    camera,\r\n    pixelRatio,\r\n    assets,\r\n    spriter,\r\n    inputHandler,\r\n  };\r\n\r\n  // let MISS = 0;\r\n  // let HIT = 0;\r\n\r\n  const world = createWorld(worldState, extra);\r\n  world.addSystem(createCaroRenderSystem());\r\n  world.addSystem(createHandAnimationRenderSystem());\r\n  world.addSystem(createBackGroundRenderSystem());\r\n  world.addSystem(createCurtainRenderSystem());\r\n  world.addSystem(createRenderArrowButtonSystem());\r\n  world.addSystem(createInputHandleGameScreenSystem());\r\n  world.addSystem(createDurationRenderSystem());\r\n  world.addSystem(createButtonRenderSystem());\r\n\r\n  const goToEndScreen = async () => {\r\n    Game.setCurrentScreen(await createRenderEndScreenSystem(Game));\r\n  };\r\n\r\n  let timeAccumulate = 0;\r\n  let counter = -1;\r\n  let animCounter = 0;\r\n  let readyToChangePhase = true;\r\n  let loadNewPhase = false;\r\n\r\n  const update = (delta) => {\r\n    timeAccumulate += delta;\r\n\r\n    if (\r\n      timeAccumulate > intro.start &&\r\n      timeAccumulate <= intro.start + intro.duration\r\n    ) {\r\n      worldState.anim = missAnim;\r\n      worldState.runIntro = true;\r\n    } else {\r\n      worldState.runIntro = false;\r\n\r\n      if (!worldState.hitFinishButton) {\r\n        worldState.stateTime += delta;\r\n      }\r\n\r\n      if (infos[counter + 1] !== undefined) {\r\n        if (timeAccumulate > infos[counter + 1].start) {\r\n          readyToChangePhase = true;\r\n        }\r\n\r\n        if (timeAccumulate > infos[counter + 1].start && readyToChangePhase) {\r\n          readyToChangePhase = false;\r\n          loadNewPhase = true;\r\n          counter = Math.min((counter += 1), infos.length);\r\n        }\r\n      }\r\n\r\n      // check end game\r\n      if (\r\n        timeAccumulate >\r\n        infos[infos.length - 1].start + infos[infos.length - 1].duration\r\n      ) {\r\n        Game.completePercentage = Math.floor(\r\n          (worldState.hit / infos.length) * 100\r\n        );\r\n        goToEndScreen();\r\n      }\r\n\r\n      // reset value\r\n      if (timeAccumulate > infos[counter].start && loadNewPhase) {\r\n        loadNewPhase = false;\r\n        worldState.starEffect = {\r\n          scale1: 1,\r\n          scale2: 1,\r\n          opacity1: 1,\r\n          opacity2: 1,\r\n        };\r\n        worldState.textPopUp = {\r\n          opacity: 1,\r\n          scale: 0.5,\r\n          startY: (height * 1.3) / 3,\r\n        };\r\n        worldState.hitFinishButton = false;\r\n        worldState.hitRight = false;\r\n        worldState.finishedPhase = false;\r\n        worldState.canPassPhase = false;\r\n        worldState.zoomOutNoteIndexs.length = 0;\r\n        worldState.zoomOutNoteInfos.length = 0;\r\n        worldState.durationEachPhase = infos[counter].duration;\r\n        worldState.realTimeDurationSet =\r\n          worldState.stateTime + worldState.durationEachPhase;\r\n        worldState.currentCheckingNoteIndex = 0;\r\n        worldState.phaseIndex += 1;\r\n        worldState.phaseIndex =\r\n          worldState.phaseIndex > scripts.length - 1\r\n            ? scripts.length - 1\r\n            : worldState.phaseIndex;\r\n      }\r\n      /// update anim\r\n      if (\r\n        timeAccumulate <\r\n        infos[animCounter].start +\r\n          infos[animCounter].duration +\r\n          infos[animCounter].dancingDuration\r\n      ) {\r\n        if (worldState.hitMiss) {\r\n          worldState.anim = missAnim;\r\n        } else if (worldState.hitRight) {\r\n          if (animCounter < counter) {\r\n            animCounter = counter;\r\n          }\r\n          worldState.anim = infos[animCounter].anim;\r\n        }\r\n      } else {\r\n        animCounter = Math.min((animCounter += 1), infos.length);\r\n        worldState.hitMiss = false;\r\n        worldState.anim = missAnim;\r\n      }\r\n    }\r\n    batch.setProjection(camera.combined);\r\n    world.update(delta);\r\n  };\r\n\r\n  return {\r\n    update,\r\n    destroy() {\r\n      inputHandler.cleanup();\r\n    },\r\n  };\r\n};\r\n","// start, duration, note, dancingDuration, dacningAnim\r\n\r\nexport default `0,4,0,0,dance\r\n4,8,5,8,buom_bay_right\r\n13,7.5,6,7.5,xoa_tay\r\n23,5,4,6.5,buom_bay_left\r\n30,6,5,4,tinh_ban\r\n37,3.5,3,3,ca_sau\r\n42,3.5,4,2.5,buom_bay_right\r\n47,3.5,5,3,xoa_tay,\r\n52,7,8,2.975,buom_bay_left`;\r\n","export default (worldState, extra) => {\r\n  const systems = [];\r\n  const passiveSystems = [];\r\n  return {\r\n    addSystem(system, passive = false) {\r\n      system.init && system.init(worldState, extra);\r\n      if (passive) {\r\n        passiveSystems.push(system);\r\n      } else {\r\n        systems.push(system);\r\n      }\r\n    },\r\n    update(delta, runPassive = true) {\r\n      for (let system of systems) {\r\n        system.update(delta, worldState, extra);\r\n      }\r\n      if (runPassive) {\r\n        for (let system of passiveSystems) {\r\n          system.update(delta, worldState, extra);\r\n        }\r\n      }\r\n    }\r\n  };\r\n};\r\n","/*\tThis work is licensed under Creative Commons GNU LGPL License.\r\n\r\n\tLicense: http://creativecommons.org/licenses/LGPL/2.1/\r\n   Version: 0.9\r\n\tAuthor:  Stefan Goessner/2006\r\n\tWeb:     http://goessner.net/ \r\n*/\r\nexport default (xml, tab) => {\r\n  var X = {\r\n    toObj: function (xml) {\r\n      var o = {};\r\n      if (xml.nodeType === 1) {\r\n        // element node ..\r\n        if (xml.attributes.length)\r\n          // element with attributes  ..\r\n          for (var i = 0; i < xml.attributes.length; i++)\r\n            o[\"@\" + xml.attributes[i].nodeName] = (\r\n              xml.attributes[i].nodeValue || \"\"\r\n            ).toString();\r\n        if (xml.firstChild) {\r\n          // element has child nodes ..\r\n          var textChild = 0,\r\n            cdataChild = 0,\r\n            hasElementChild = false;\r\n          for (var n = xml.firstChild; n; n = n.nextSibling) {\r\n            if (n.nodeType === 1) hasElementChild = true;\r\n            else if (n.nodeType === 3 && n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/))\r\n              textChild++;\r\n            // non-whitespace text\r\n            else if (n.nodeType === 4) cdataChild++; // cdata section node\r\n          }\r\n          if (hasElementChild) {\r\n            if (textChild < 2 && cdataChild < 2) {\r\n              // structured element with evtl. a single text or/and cdata node ..\r\n              X.removeWhite(xml);\r\n              for (let n = xml.firstChild; n; n = n.nextSibling) {\r\n                if (n.nodeType === 3)\r\n                  // text node\r\n                  o[\"#text\"] = X.escape(n.nodeValue);\r\n                else if (n.nodeType === 4)\r\n                  // cdata node\r\n                  o[\"#cdata\"] = X.escape(n.nodeValue);\r\n                else if (o[n.nodeName]) {\r\n                  // multiple occurence of element ..\r\n                  if (o[n.nodeName] instanceof Array)\r\n                    o[n.nodeName][o[n.nodeName].length] = X.toObj(n);\r\n                  else o[n.nodeName] = [o[n.nodeName], X.toObj(n)];\r\n                } // first occurence of element..\r\n                else o[n.nodeName] = X.toObj(n);\r\n              }\r\n            } else {\r\n              // mixed content\r\n              if (!xml.attributes.length) o = X.escape(X.innerXml(xml));\r\n              else o[\"#text\"] = X.escape(X.innerXml(xml));\r\n            }\r\n          } else if (textChild) {\r\n            // pure text\r\n            if (!xml.attributes.length) o = X.escape(X.innerXml(xml));\r\n            else o[\"#text\"] = X.escape(X.innerXml(xml));\r\n          } else if (cdataChild) {\r\n            // cdata\r\n            if (cdataChild > 1) o = X.escape(X.innerXml(xml));\r\n            else\r\n              for (let n = xml.firstChild; n; n = n.nextSibling)\r\n                o[\"#cdata\"] = X.escape(n.nodeValue);\r\n          }\r\n        }\r\n        if (!xml.attributes.length && !xml.firstChild) o = null;\r\n      } else if (xml.nodeType === 9) {\r\n        // document.node\r\n        o = X.toObj(xml.documentElement);\r\n      } else alert(\"unhandled node type: \" + xml.nodeType);\r\n      return o;\r\n    },\r\n    toJson: function (o, name, ind) {\r\n      var json = name ? '\"' + name + '\"' : \"\";\r\n      if (o instanceof Array) {\r\n        for (var i = 0, n = o.length; i < n; i++)\r\n          o[i] = X.toJson(o[i], \"\", ind + \"\\t\");\r\n        json +=\r\n          (name ? \":[\" : \"[\") +\r\n          (o.length > 1\r\n            ? \"\\n\" + ind + \"\\t\" + o.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind\r\n            : o.join(\"\")) +\r\n          \"]\";\r\n      } else if (o == null) json += (name && \":\") + \"null\";\r\n      else if (typeof o == \"object\") {\r\n        var arr = [];\r\n        for (var m in o) arr[arr.length] = X.toJson(o[m], m, ind + \"\\t\");\r\n        json +=\r\n          (name ? \":{\" : \"{\") +\r\n          (arr.length > 1\r\n            ? \"\\n\" + ind + \"\\t\" + arr.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind\r\n            : arr.join(\"\")) +\r\n          \"}\";\r\n      } else if (typeof o == \"string\")\r\n        json += (name && \":\") + '\"' + o.toString() + '\"';\r\n      else json += (name && \":\") + o.toString();\r\n      return json;\r\n    },\r\n    innerXml: function (node) {\r\n      var s = \"\";\r\n      if (\"innerHTML\" in node) s = node.innerHTML;\r\n      else {\r\n        var asXml = function (n) {\r\n          var s = \"\";\r\n          if (n.nodeType === 1) {\r\n            s += \"<\" + n.nodeName;\r\n            for (var i = 0; i < n.attributes.length; i++)\r\n              s +=\r\n                \" \" +\r\n                n.attributes[i].nodeName +\r\n                '=\"' +\r\n                (n.attributes[i].nodeValue || \"\").toString() +\r\n                '\"';\r\n            if (n.firstChild) {\r\n              s += \">\";\r\n              for (var c = n.firstChild; c; c = c.nextSibling) s += asXml(c);\r\n              s += \"</\" + n.nodeName + \">\";\r\n            } else s += \"/>\";\r\n          } else if (n.nodeType === 3) s += n.nodeValue;\r\n          else if (n.nodeType === 4) s += \"<![CDATA[\" + n.nodeValue + \"]]>\";\r\n          return s;\r\n        };\r\n        for (var c = node.firstChild; c; c = c.nextSibling) s += asXml(c);\r\n      }\r\n      return s;\r\n    },\r\n    escape: function (txt) {\r\n      return txt\r\n        .replace(/[\\\\]/g, \"\\\\\\\\\")\r\n        .replace(/[\\\\\"]/g, '\\\\\"')\r\n        .replace(/[\\n]/g, \"\\\\n\")\r\n        .replace(/[\\r]/g, \"\\\\r\");\r\n    },\r\n    removeWhite: function (e) {\r\n      e.normalize();\r\n      for (var n = e.firstChild; n; ) {\r\n        if (n.nodeType === 3) {\r\n          // text node\r\n          if (!n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) {\r\n            // pure whitespace text node\r\n            var nxt = n.nextSibling;\r\n            e.removeChild(n);\r\n            n = nxt;\r\n          } else n = n.nextSibling;\r\n        } else if (n.nodeType === 1) {\r\n          // element node\r\n          X.removeWhite(n);\r\n          n = n.nextSibling;\r\n        } // any other node\r\n        else n = n.nextSibling;\r\n      }\r\n      return e;\r\n    },\r\n  };\r\n  if (xml.nodeType === 9)\r\n    // document node\r\n    xml = xml.documentElement;\r\n  var json = X.toJson(X.toObj(X.removeWhite(xml)), xml.nodeName, \"\\t\");\r\n  return (\r\n    \"{\\n\" +\r\n    tab +\r\n    (tab ? json.replace(/\\t/g, tab) : json.replace(/\\t|\\n/g, \"\")) +\r\n    \"\\n}\"\r\n  );\r\n};\r\n","import xml2json from \"./xml2json\";\r\nimport { Data, Pose } from \"spriter-lib\";\r\n\r\nexport default async (packFileUrl) => {\r\n  const regionNames = {};\r\n  let spriter_data = null;\r\n  let spriter_json;\r\n  const packFileContent = await fetch(packFileUrl).then((res) => res.text());\r\n  let match = packFileUrl.match(/.scml$/i);\r\n  if (match !== null) {\r\n    let parser = new DOMParser();\r\n    let xml_text = packFileContent.replace(/&quot;/g, '\"');\r\n    let xml = parser.parseFromString(xml_text, \"text/xml\");\r\n    let json_text = xml2json(xml, \"\\t\");\r\n    json_text = json_text.replace(/\"@(.*)\":/g, '\"$1\":');\r\n    let json = JSON.parse(json_text);\r\n    spriter_json = json.spriter_data;\r\n  } else {\r\n    spriter_json = JSON.parse(packFileContent);\r\n  }\r\n  spriter_data = new Data().load(spriter_json);\r\n\r\n  spriter_data.folder_array.forEach((folder, index) => {\r\n    regionNames[index] = {};\r\n    folder.file_array.forEach((file, fileIndex) => {\r\n      regionNames[folder.id][fileIndex] = file.name;\r\n    });\r\n  });\r\n  const pose = new Pose(spriter_data);\r\n\r\n  return { regionNames, pose, data: spriter_data, rawData: spriter_json };\r\n};\r\n","export default class TextureRegion {\r\n  static splitTexture(texture, cols, rows) {\r\n    const { width, height } = texture;\r\n    const regionWidth = width / cols;\r\n    const regionHeight = height / rows;\r\n    const regions = [];\r\n\r\n    for (let x = 0; x < cols; x++) {\r\n      for (let y = 0; y < rows; y++) {\r\n        regions.push(\r\n          new TextureRegion(\r\n            texture,\r\n            x * regionWidth,\r\n            y * regionHeight,\r\n            regionWidth,\r\n            regionHeight,\r\n            {}\r\n          )\r\n        );\r\n      }\r\n    }\r\n\r\n    return regions;\r\n  }\r\n  constructor(\r\n    tex,\r\n    x,\r\n    y,\r\n    width,\r\n    height,\r\n    originX,\r\n    originY,\r\n    extraData,\r\n    invTexWidth,\r\n    invTexHeight\r\n  ) {\r\n    if (!invTexWidth || !invTexHeight) {\r\n      invTexWidth = 1 / tex.width;\r\n      invTexHeight = 1 / tex.height;\r\n    }\r\n    const u = x * invTexWidth;\r\n    const v = y * invTexHeight;\r\n    const u2 = (x + width) * invTexWidth;\r\n    const v2 = (y + height) * invTexHeight;\r\n    this.rotated = false;\r\n    this.texture = tex;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.originX = originX;\r\n    this.originY = originY;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.u = u;\r\n    this.v = v;\r\n    this.u2 = u2;\r\n    this.v2 = v2;\r\n    for (let key in extraData) {\r\n      this[key] = extraData[key];\r\n    }\r\n  }\r\n\r\n  draw(\r\n    batch,\r\n    x,\r\n    y,\r\n    width,\r\n    height,\r\n    originX = 0,\r\n    originY = 0,\r\n    rotation = 0,\r\n    scaleX = 1,\r\n    scaleY = 1\r\n  ) {\r\n    batch.draw(\r\n      this.texture,\r\n      x,\r\n      y,\r\n      width,\r\n      height,\r\n      this.rotated,\r\n      originX,\r\n      originY,\r\n      rotation,\r\n      scaleX,\r\n      scaleY,\r\n      this.u,\r\n      this.v,\r\n      this.u2,\r\n      this.v2\r\n    );\r\n  }\r\n}\r\n","import { loadTexture } from \"gdxjs\";\r\nimport TextureRegion from \"./textureRegion\";\r\nfunction concatAndResolveUrl(url, concat) {\r\n  let url1 = url.split(\"/\");\r\n  let url2 = concat.split(\"/\");\r\n  let url3 = [];\r\n\r\n  for (let i = 0, l = url1.length; i < l; i++) {\r\n    if (url1[i] === \"..\") {\r\n      url3.pop();\r\n    } else if (url1[i] === \".\") {\r\n      continue;\r\n    } else {\r\n      url3.push(url1[i]);\r\n    }\r\n  }\r\n\r\n  for (let i = 0, l = url2.length; i < l; i++) {\r\n    if (url2[i] === \"..\") {\r\n      url3.pop();\r\n    } else if (url2[i] === \".\") {\r\n      continue;\r\n    } else {\r\n      url3.push(url2[i]);\r\n    }\r\n  }\r\n  return url3.join(\"/\");\r\n}\r\nconst loadUrl = async (gl, packFileUrl, textureOptions, textureRegions) => {\r\n  const packFileContent = await fetch(packFileUrl).then((res) => res.text());\r\n  const regions = [];\r\n  const sites = [];\r\n  const obj = JSON.parse(packFileContent);\r\n  const meta = obj.meta;\r\n  let name = Object.getOwnPropertyNames(obj.frames);\r\n  const framesArray = Object.keys(obj.frames).map((i) => obj.frames[i]);\r\n  const file = concatAndResolveUrl(packFileUrl, `../${meta.image}`);\r\n  for (let i = 0; i < framesArray.length; i++) {\r\n    const frame = framesArray[i];\r\n    let w = frame.frame.w,\r\n      h = frame.frame.h;\r\n    const site = {\r\n      // const frame: any = tps_json.frames[key],\r\n      // const site: Site = (data.sites[key] = new Site());\r\n      x: frame.frame.x,\r\n      y: frame.frame.y,\r\n      w: frame.frame.w,\r\n      h: frame.frame.h,\r\n      rotate: frame.rotated ? 1 : 0, // 90 degrees\r\n      offset_x: (frame.spriteSourceSize && frame.spriteSourceSize.x) || 0,\r\n      offset_y: (frame.spriteSourceSize && frame.spriteSourceSize.y) || 0,\r\n      original_w: (frame.sourceSize && frame.sourceSize.w) || w,\r\n      original_h: (frame.sourceSize && frame.sourceSize.h) || h,\r\n    };\r\n    sites.push(site);\r\n    const region = {\r\n      id: i,\r\n      name: name[i],\r\n      frame: frame.frame,\r\n      rotated: frame.rotated === \"true\",\r\n      sourceSize: frame.sourceSize,\r\n      spriteSourceSize: frame.spriteSourceSize,\r\n      trimmed: frame.trimmed,\r\n      app: meta.app,\r\n      format: meta.format,\r\n      main_texture: meta.image,\r\n      scale: meta.scale,\r\n      size: meta.size,\r\n      version: meta.version,\r\n      site: site,\r\n      meta: meta,\r\n    };\r\n    regions.push(region);\r\n  }\r\n  const tex = await loadTexture(gl, file, textureOptions);\r\n  for (const region of regions) {\r\n    const x = region.frame.x;\r\n    const y = region.frame.y;\r\n    const w = region.rotated ? region.frame.h : region.frame.w;\r\n    const h = region.rotated ? region.frame.w : region.frame.h;\r\n    const originX = region.rotated ? region.sourceSize.h : region.sourceSize.w;\r\n    const originY = region.rotated ? region.sourceSize.w : region.sourceSize.h;\r\n    const extraData = region;\r\n    const invTextWidth = 1 / region.size.w;\r\n    const invTextHeight = 1 / region.size.h;\r\n    textureRegions.push(\r\n      new TextureRegion(\r\n        tex,\r\n        x,\r\n        y,\r\n        w,\r\n        h,\r\n        originX,\r\n        originY,\r\n        extraData,\r\n        invTextWidth,\r\n        invTextHeight\r\n      )\r\n    );\r\n  }\r\n  return textureRegions;\r\n};\r\nexport default async (gl, listPackFileUrl, textureOptions) => {\r\n  let textureRegions = [];\r\n  if (Array.isArray(listPackFileUrl)) {\r\n    for (const packFileUrl of listPackFileUrl) {\r\n      textureRegions = await loadUrl(\r\n        gl,\r\n        packFileUrl,\r\n        textureOptions,\r\n        textureRegions\r\n      );\r\n    }\r\n  } else {\r\n    textureRegions = await loadUrl(\r\n      gl,\r\n      listPackFileUrl,\r\n      textureOptions,\r\n      textureRegions\r\n    );\r\n  }\r\n  return {\r\n    getRegions() {\r\n      return textureRegions;\r\n    },\r\n    findRegion(name) {\r\n      for (let i = 0; i < textureRegions.length; i++) {\r\n        if (textureRegions[i].name === name) {\r\n          return textureRegions[i];\r\n        }\r\n      }\r\n    },\r\n  };\r\n};\r\n","import loadSCML from \"./components/loadSCML\";\r\nimport loadJsonAtlas from \"./components/loadJsonAtlas\";\r\nimport nudged from \"nudged\";\r\nimport { mat4, vec3 } from \"gl-matrix\";\r\n\r\nfunction concatAndResolveUrl(url, concat) {\r\n  let url1 = url.split(\"/\");\r\n  let url2 = concat.split(\"/\");\r\n  let url3 = [];\r\n\r\n  for (let i = 0, l = url1.length; i < l; i++) {\r\n    if (url1[i] === \"..\") {\r\n      url3.pop();\r\n    } else {\r\n      url3.push(url1[i]);\r\n    }\r\n  }\r\n\r\n  for (let i = 0, l = url2.length; i < l; i++) {\r\n    if (url2[i] === \"..\") {\r\n      url3.pop();\r\n    } else if (url2[i] === \".\") {\r\n      continue;\r\n    } else {\r\n      url3.push(url2[i]);\r\n    }\r\n  }\r\n\r\n  return url3.join(\"/\");\r\n}\r\n\r\nexport default async (gl, scmlUrl, rectName) => {\r\n  const { regionNames, pose, data, rawData } = await loadSCML(scmlUrl);\r\n  const atlasInfos = rawData.atlas.i;\r\n\r\n  const transformMatrix = mat4.create();\r\n  const vertices = new Float32Array(20);\r\n  const arr1 = [];\r\n  const arr2 = [];\r\n  const arr3 = [];\r\n  const arr4 = [];\r\n  let xy1 = [];\r\n  let xy2 = [];\r\n  let xy3 = [];\r\n  let xy4 = [];\r\n\r\n  const atlas = await loadJsonAtlas(\r\n    gl,\r\n    atlasInfos.map((info) => concatAndResolveUrl(scmlUrl, `../${info.name}`))\r\n  );\r\n\r\n  let rectObject;\r\n\r\n  const setArr = (arr, v1, v2, v3, v4, v5) => {\r\n    arr.length = 0;\r\n    arr.push(v1, v2, v3, v4, v5);\r\n  };\r\n\r\n  const generateVertices = (\r\n    region,\r\n    position,\r\n    rotation,\r\n    scale,\r\n    affine,\r\n    color\r\n  ) => {\r\n    if (region.rotated) {\r\n      setArr(\r\n        arr1,\r\n        position.x - region.height / 2,\r\n        position.y - region.width / 2,\r\n        color,\r\n        region.u,\r\n        region.v\r\n      );\r\n      setArr(\r\n        arr2,\r\n        position.x + region.height / 2,\r\n        position.y - region.width / 2,\r\n        color,\r\n        region.u,\r\n        region.v2\r\n      );\r\n\r\n      setArr(\r\n        arr3,\r\n        position.x + region.height / 2,\r\n        position.y + region.width / 2,\r\n        color,\r\n        region.u2,\r\n        region.v2\r\n      );\r\n      setArr(\r\n        arr4,\r\n        position.x - region.height / 2,\r\n        position.y + region.width / 2,\r\n        color,\r\n        region.u2,\r\n        region.v\r\n      );\r\n    } else {\r\n      setArr(\r\n        arr1,\r\n        position.x - region.width / 2,\r\n        position.y - region.height / 2,\r\n        color,\r\n        region.u,\r\n        region.v2\r\n      );\r\n      setArr(\r\n        arr2,\r\n        position.x + region.width / 2,\r\n        position.y - region.height / 2,\r\n        color,\r\n        region.u2,\r\n        region.v2\r\n      );\r\n      setArr(\r\n        arr3,\r\n        position.x + region.width / 2,\r\n        position.y + region.height / 2,\r\n        color,\r\n        region.u2,\r\n        region.v\r\n      );\r\n      setArr(\r\n        arr4,\r\n        position.x - region.width / 2,\r\n        position.y + region.height / 2,\r\n        color,\r\n        region.u,\r\n        region.v\r\n      );\r\n    }\r\n\r\n    mat4.identity(transformMatrix);\r\n    mat4.translate(transformMatrix, transformMatrix, [\r\n      position.x,\r\n      position.y,\r\n      0,\r\n    ]);\r\n    mat4.rotateZ(transformMatrix, transformMatrix, rotation.rad);\r\n    mat4.scale(transformMatrix, transformMatrix, [scale.x, scale.y, 1]);\r\n    mat4.translate(transformMatrix, transformMatrix, [\r\n      -position.x,\r\n      -position.y,\r\n      0,\r\n    ]);\r\n\r\n    setArr(xy1, arr1[0], arr1[1], 0);\r\n    setArr(xy2, arr2[0], arr2[1], 0);\r\n    setArr(xy3, arr3[0], arr3[1], 0);\r\n    setArr(xy4, arr4[0], arr4[1], 0);\r\n\r\n    vec3.transformMat4(xy1, xy1, transformMatrix);\r\n    vec3.transformMat4(xy2, xy2, transformMatrix);\r\n    vec3.transformMat4(xy3, xy3, transformMatrix);\r\n    vec3.transformMat4(xy4, xy4, transformMatrix);\r\n\r\n    if (affine) {\r\n      xy1 = affine.transform(xy1);\r\n      xy2 = affine.transform(xy2);\r\n      xy3 = affine.transform(xy3);\r\n      xy4 = affine.transform(xy4);\r\n    }\r\n\r\n    vertices[0] = xy1[0];\r\n    vertices[1] = xy1[1];\r\n    vertices[2] = arr1[2];\r\n    vertices[3] = arr1[3];\r\n    vertices[4] = arr1[4];\r\n    vertices[5] = xy2[0];\r\n    vertices[6] = xy2[1];\r\n    vertices[7] = arr2[2];\r\n    vertices[8] = arr2[3];\r\n    vertices[9] = arr2[4];\r\n    vertices[10] = xy3[0];\r\n    vertices[11] = xy3[1];\r\n    vertices[12] = arr3[2];\r\n    vertices[13] = arr3[3];\r\n    vertices[14] = arr3[4];\r\n    vertices[15] = xy4[0];\r\n    vertices[16] = xy4[1];\r\n    vertices[17] = arr4[2];\r\n    vertices[18] = arr4[3];\r\n    vertices[19] = arr4[4];\r\n  };\r\n\r\n  let rect;\r\n  let domain = [\r\n    [0, 0],\r\n    [0, 0],\r\n    [0, 0],\r\n  ];\r\n  let range = [\r\n    [0, 0],\r\n    [0, 0],\r\n    [0, 0],\r\n  ];\r\n\r\n  let prevX, prevY, prevW, prevH, affine;\r\n\r\n  return {\r\n    getAnim() {\r\n      return pose.getAnim();\r\n    },\r\n    getInfos() {\r\n      return { regionNames, pose, data, rawData };\r\n    },\r\n    getAspect() {\r\n      if (!rectObject) {\r\n        return 1;\r\n      }\r\n      return rectObject.w / rectObject.h;\r\n    },\r\n    update(delta) {\r\n      pose.update(delta);\r\n      pose.strike();\r\n    },\r\n    setEntity(entityKey) {\r\n      pose.setEntity(entityKey);\r\n      const entity = pose.data.entity_map[entityKey];\r\n      rectObject = entity.obj_info_map[rectName];\r\n      affine = null;\r\n    },\r\n    setAnim(anim) {\r\n      pose.setAnim(anim);\r\n      affine = null;\r\n    },\r\n    draw(batch, x, y, width, height) {\r\n      if (!rect) {\r\n        rect = pose.object_array.find((obj) => obj.name === rectName);\r\n\r\n        const px = rect.world_space.position.x;\r\n        const py = rect.world_space.position.y;\r\n        const pw = rectObject.w * rect.world_space.scale.x;\r\n        const ph = rectObject.h * rect.world_space.scale.y;\r\n\r\n        setArr(domain[0], px - pw / 2, py - ph / 2);\r\n        setArr(domain[1], px + pw / 2, py - ph / 2);\r\n        setArr(domain[2], px - pw / 2, py + ph / 2);\r\n      }\r\n\r\n      if (\r\n        !affine ||\r\n        x !== prevX ||\r\n        y !== prevY ||\r\n        width !== prevW ||\r\n        height !== prevH\r\n      ) {\r\n        setArr(range[0], x - width / 2, y - height / 2);\r\n        setArr(range[1], x + width / 2, y - height / 2);\r\n        setArr(range[2], x - width / 2, y + height / 2);\r\n        prevX = x;\r\n        prevY = y;\r\n        prevW = width;\r\n        prevH = height;\r\n        affine = nudged.estimate(\"TS\", domain, range);\r\n      }\r\n\r\n      pose.object_array.forEach((obj) => {\r\n        if (obj.type !== \"sprite\") return;\r\n        // !this.printed && (console.log(obj) || (this.printed = true));\r\n        // Space.combine(obj.world_space, obj.local_space, obj.world_space);\r\n        const { position, rotation, scale } = obj.world_space;\r\n        if (\r\n          !regionNames[obj.folder_index] ||\r\n          !regionNames[obj.folder_index][obj.file_index]\r\n        )\r\n          return;\r\n        const region = atlas.findRegion(\r\n          regionNames[obj.folder_index][obj.file_index]\r\n        );\r\n        if (!region) return;\r\n        generateVertices(\r\n          region,\r\n          position,\r\n          rotation,\r\n          scale,\r\n          affine,\r\n          batch.color\r\n        );\r\n        batch.drawVertices(region.texture, vertices, 0);\r\n      });\r\n    },\r\n  };\r\n};\r\n","import { fillRect, createViewportAwareInputHandler } from \"gdxjs\";\r\nimport createRenderGameScreenSystem from \"./GameScreen\";\r\nimport { checkPointInsideRect } from \"../utils/coordUtils\";\r\nimport loadSpriter from \"../loadSpriter\";\r\n\r\nexport default async (Game) => {\r\n  const { batch, canvas, width, height, camera, viewport, assets, gl } = Game;\r\n\r\n  const spriter = await loadSpriter(\r\n    gl,\r\n    \"./spriter_animations/hands.scml\",\r\n    \"box_000\"\r\n  );\r\n  Game.spriter = spriter;\r\n  const inputHandler = createViewportAwareInputHandler(canvas, viewport);\r\n  const atlas = assets.auditionAtlas;\r\n  const startEndAtlas = assets.startEndAtlas;\r\n\r\n  const table = atlas.findRegion(\"table\", -1);\r\n  const TABLE_WIDTH = width;\r\n  const TABLE_HEIGHT = (TABLE_WIDTH * table.height) / table.width;\r\n\r\n  const bg = atlas.findRegion(\"bg\", -1);\r\n  const BG_WIDTH = width;\r\n  const BG_HEIGHT = (BG_WIDTH * bg.height) / bg.width;\r\n\r\n  const curtain = assets.curtain;\r\n  const CURTAIN_WIDTH = width;\r\n  const CURTAIN_HEIGHT = (CURTAIN_WIDTH * curtain.height) / curtain.width;\r\n\r\n  const number1 = startEndAtlas.findRegion(\"number1_start\", -1);\r\n  const number2 = startEndAtlas.findRegion(\"number2_Start\", -1);\r\n  const number3 = startEndAtlas.findRegion(\"number3_start\", -1);\r\n  const startButton = startEndAtlas.findRegion(\"start_button\");\r\n\r\n  const BUTTON_WIDTH = width / 2;\r\n  const BUTTON_HEIGHT = (BUTTON_WIDTH * startButton.height) / startButton.width;\r\n  const BUTTON_START_X = width / 2 - BUTTON_WIDTH / 2;\r\n  const BUTTON_START_Y = (height * 2.3) / 3;\r\n\r\n  const buttonRect = [\r\n    BUTTON_START_X,\r\n    BUTTON_START_Y,\r\n    BUTTON_WIDTH,\r\n    BUTTON_HEIGHT,\r\n  ];\r\n\r\n  const NB1_HEIGHT = height / 7;\r\n  const NB1_WIDHT = (NB1_HEIGHT * number1.width) / number1.height;\r\n\r\n  const NB2_HEIGHT = height / 7;\r\n  const NB2_WIDHT = (NB2_HEIGHT * number2.width) / number2.height;\r\n\r\n  const NB3_HEIGHT = height / 7;\r\n  const NB3_WIDHT = (NB1_HEIGHT * number3.width) / number3.height;\r\n\r\n  let startCountDown = false;\r\n  let stateTime = 0;\r\n  let scale1 = 0;\r\n  let scale2 = 0;\r\n  let scale3 = 0;\r\n\r\n  const goToGameScreen = async () => {\r\n    Game.setCurrentScreen(await createRenderGameScreenSystem(Game));\r\n  };\r\n\r\n  inputHandler.addEventListener(\"touchStart\", (x, y) => {\r\n    let point = inputHandler.getTouchedWorldCoord();\r\n    if (checkPointInsideRect({ x: point.x, y: point.y }, buttonRect)) {\r\n      startCountDown = true;\r\n    }\r\n    // goToGameScreen();\r\n  });\r\n\r\n  let scaleState = [1.1, 0.9, 1.05, 0.95, 1, 1, 1, 1, 1];\r\n  let index = [0, 0, 0];\r\n  let type = [\"bigger\", \"bigger\", \"bigger\"];\r\n\r\n  const update = (delta) => {\r\n    camera.setPosition(0, 0);\r\n    batch.setProjection(camera.combined);\r\n    batch.begin();\r\n    batch.setColor(1, 1, 1, 1);\r\n    bg.draw(\r\n      batch,\r\n      width / 2 - BG_WIDTH / 2,\r\n      -BG_HEIGHT / 30,\r\n      BG_WIDTH,\r\n      BG_HEIGHT\r\n    );\r\n\r\n    table.draw(\r\n      batch,\r\n      width / 2 - TABLE_WIDTH / 2,\r\n      height / 2 - height / 20,\r\n      TABLE_WIDTH,\r\n      TABLE_HEIGHT\r\n    );\r\n\r\n    fillRect(batch, curtain, 0, 0, CURTAIN_WIDTH, CURTAIN_HEIGHT);\r\n\r\n    startButton.draw(\r\n      batch,\r\n      buttonRect[0],\r\n      buttonRect[1],\r\n      buttonRect[2],\r\n      buttonRect[3]\r\n    );\r\n\r\n    if (startCountDown && stateTime < 3) {\r\n      let tex;\r\n      let infos;\r\n      let scale;\r\n      if (stateTime < 1) {\r\n        tex = number3;\r\n        infos = [NB3_WIDHT, NB3_HEIGHT];\r\n        if (type[0] === \"bigger\") {\r\n          scale3 += delta * 1.5;\r\n        } else {\r\n          scale3 -= delta * 1.5;\r\n        }\r\n        if (scale3 >= scaleState[index[0]] && type[0] === \"bigger\") {\r\n          type[0] = \"smaller\";\r\n          index[0]++;\r\n        }\r\n        if (scale3 <= scaleState[index[0]] && type[0] === \"smaller\") {\r\n          type[0] = \"bigger\";\r\n          index[0]++;\r\n        }\r\n        scale = scale3;\r\n        // console.log(scale, type);\r\n      } else if (stateTime > 1 && stateTime < 2) {\r\n        tex = number2;\r\n        infos = [NB2_WIDHT, NB2_HEIGHT];\r\n        if (type[1] === \"bigger\") {\r\n          scale2 += delta * 1.5;\r\n        } else {\r\n          scale2 -= delta * 1.5;\r\n        }\r\n        if (scale2 >= scaleState[index[1]] && type[1] === \"bigger\") {\r\n          type[1] = \"smaller\";\r\n          index[1]++;\r\n        }\r\n        if (scale2 <= scaleState[index[1]] && type[1] === \"smaller\") {\r\n          type[1] = \"bigger\";\r\n          index[1]++;\r\n        }\r\n        scale = scale2;\r\n      } else if (stateTime > 2 && stateTime < 3) {\r\n        tex = number1;\r\n        infos = [NB1_WIDHT, NB1_HEIGHT];\r\n        if (type[2] === \"bigger\") {\r\n          scale1 += delta * 1.5;\r\n        } else {\r\n          scale1 -= delta * 1.5;\r\n        }\r\n        if (scale1 >= scaleState[index[2]] && type[2] === \"bigger\") {\r\n          type[2] = \"smaller\";\r\n          index[2]++;\r\n        }\r\n        if (scale1 <= scaleState[index[2]] && type[2] === \"smaller\") {\r\n          type[2] = \"bigger\";\r\n          index[2]++;\r\n        }\r\n        scale = scale1;\r\n      }\r\n      stateTime += delta;\r\n      tex.draw(\r\n        batch,\r\n        width / 2 - infos[0] / 2,\r\n        (height * 1) / 5,\r\n        infos[0],\r\n        infos[1],\r\n        infos[0] / 2,\r\n        infos[1] / 2,\r\n        0,\r\n        scale,\r\n        scale\r\n      );\r\n    }\r\n\r\n    if (stateTime >= 3) {\r\n      goToGameScreen();\r\n    }\r\n    batch.end();\r\n  };\r\n\r\n  return {\r\n    update,\r\n    destroy() {\r\n      inputHandler.cleanup();\r\n    },\r\n  };\r\n};\r\n","import \"./index.css\";\n\nimport {\n  createBatch,\n  createGameLoop,\n  loadAtlas,\n  loadTexture,\n  createViewport,\n} from \"gdxjs\";\nimport createWhiteText from \"gl-white-texture\";\nimport createRenderStartScreenSystem from \"./screen/StartScreen\";\nimport { Howl } from \"howler\";\n\nconst init = async () => {\n  const canvas = document.getElementById(\"main\");\n\n  const pixelRatio = window.devicePixelRatio;\n  // const [width, height] = resizeCanvas(canvas, pixelRatio);\n\n  const [width, height] = [47, 100];\n  // const [width, height] = [46 * 10, 100 * 10];\n  const viewport = createViewport(canvas, width, height);\n  const gl = viewport.getContext();\n  const camera = viewport.getCamera();\n\n  const batch = createBatch(gl);\n  const whiteTex = createWhiteText(gl);\n\n  const sound = new Howl({\n    src: [\"ghen_covy.mp3\"],\n  });\n\n  const Game = {\n    completePercentage: 0,\n    viewport,\n    canvas,\n    width,\n    height,\n    gl,\n    batch,\n    whiteTex,\n    camera,\n    pixelRatio,\n    sound,\n    setCurrentScreen(screen) {\n      if (Game.currentScreen) {\n        Game.currentScreen.destroy();\n      }\n      Game.currentScreen = screen;\n    },\n  };\n\n  // const spriter = await loadSpriter(\n  //   gl,\n  //   \"./spriter_animations/hands.scml\",\n  //   \"box_000\"\n  // );\n  // Game.spriter = spriter;\n\n  const auditionAtlas = await loadAtlas(gl, \"./assets/audition_asset.atlas\");\n  const finishAtlas = await loadAtlas(\n    gl,\n    \"./assets/audition-assets_mark.atlas\"\n  );\n  const startEndAtlas = await loadAtlas(gl, \"./assets/start_end.atlas\");\n  const curtain = await loadTexture(gl, \"./assets/curtain.png\");\n  const finishBar = await loadTexture(gl, \"./assets/finish-bar.png\");\n  const mask = await loadTexture(gl, \"./assets/perfect_mask.png\");\n\n  const assets = {\n    auditionAtlas,\n    finishAtlas,\n    startEndAtlas,\n    curtain,\n    finishBar,\n    mask,\n  };\n  Game.assets = assets;\n\n  Game.setCurrentScreen(await createRenderStartScreenSystem(Game));\n\n  gl.clearColor(0, 0, 0, 0);\n  const update = (delta) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    if (Game.currentScreen) {\n      Game.currentScreen.update(delta);\n    }\n  };\n\n  createGameLoop(update);\n};\n\ninit();\n"],"sourceRoot":""}